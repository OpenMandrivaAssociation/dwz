From 2124f9b50c2c4963e1ac6f1716ca48b114643ca8 Mon Sep 17 00:00:00 2001
From: Jakub Jelinek <jakub@redhat.com>
Date: Wed, 11 Apr 2018 14:25:06 +0200
Subject: [PATCH 1/1] Add DW_OP_GNU_variable_value support.

---
 dwarf2.def | 3 +++
 dwz.c      | 6 ++++--
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/dwarf2.def b/dwarf2.def
index e9a8bca..17311fa 100644
--- a/dwarf2.def
+++ b/dwarf2.def
@@ -588,6 +588,9 @@ DW_OP (DW_OP_GNU_reinterpret, 0xf9)
 DW_OP (DW_OP_GNU_parameter_ref, 0xfa)
 /* Extension for Fission.  See http://gcc.gnu.org/wiki/DebugFission.  */
 DW_OP (DW_OP_GNU_addr_index, 0xfb)
+/* The GNU variable value extension.
+   See http://dwarfstd.org/ShowIssue.php?issue=161109.2 . */
+DW_OP (DW_OP_GNU_variable_value, 0xfd)
 /* HP extensions.  */
 DW_OP_DUP (DW_OP_HP_unknown, 0xe0) /* Ouch, the same as GNU_push_tls_address.  */
 DW_OP (DW_OP_HP_is_value, 0xe1)
diff --git a/dwz.c b/dwz.c
index b3b779d..d348418 100644
--- a/dwz.c
+++ b/dwz.c
@@ -1523,6 +1523,7 @@ read_exprloc (DSO *dso, dw_die_ref die, unsigned char *ptr, size_t len,
 	  break;
 	case DW_OP_call_ref:
 	case DW_OP_GNU_implicit_pointer:
+	case DW_OP_GNU_variable_value:
 	  cu = die_cu (die);
 	  addr = read_size (ptr, cu->cu_version == 2 ? ptr_size : 4);
 	  if (cu->cu_version == 2)
@@ -7823,8 +7824,8 @@ init_new_die_offsets (dw_die_ref die, unsigned int off,
 	  default:
 	    break;
 	  }
-	die->die_size += die->u.p2.die_intracu_udata_size;
-      }
+      die->die_size += die->u.p2.die_intracu_udata_size;
+    }
   off += die->die_size;
   for (child = die->die_child; child; child = child->die_sib)
     off = init_new_die_offsets (child, off, intracusize);
@@ -8577,6 +8578,7 @@ adjust_exprloc (dw_cu_ref cu, dw_die_ref die, dw_cu_ref refcu,
 	  break;
 	case DW_OP_call_ref:
 	case DW_OP_GNU_implicit_pointer:
+	case DW_OP_GNU_variable_value:
 	  addr = read_size (ptr, refcu->cu_version == 2 ? ptr_size : 4);
 	  assert (cu->cu_version == refcu->cu_version);
 	  refd = off_htab_lookup (NULL, addr);
-- 
2.9.3

